options:
  parameters:
    author: SEAKn Space
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: top_block
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: BPSK Send and Receive
    window_size: 1280, 1024
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 6]
    rotation: 0
    state: enabled

blocks:
- name: BPSK
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1, 1]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    npwr: '1.0'
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [976, 8.0]
    rotation: 0
    state: enabled
- name: access_key
  id: variable
  parameters:
    comment: ''
    value: '''11100001010110101110100010010011'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 12.0]
    rotation: 0
    state: enabled
- name: baseband_LO
  id: variable
  parameters:
    comment: ''
    value: 30e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 4]
    rotation: 0
    state: enabled
- name: carrier_freq
  id: variable
  parameters:
    comment: ''
    value: 0435e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1416, 12.0]
    rotation: 0
    state: true
- name: hdr_format
  id: variable
  parameters:
    comment: header_format_default
    value: digital.header_format_default(access_key,0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 8.0]
    rotation: 0
    state: enabled
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '25'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 4.0]
    rotation: 0
    state: enabled
- name: packet_len
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1912, 160.0]
    rotation: 0
    state: true
- name: rrc_taps
  id: variable
  parameters:
    comment: ''
    value: firdes.root_raised_cosine(nfilts, nfilts, 1.0/float(sps), 0.35, 45*nfilts)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 6]
    rotation: 0
    state: enabled
- name: rtl_samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1.0e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 4]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '100000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 6]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '15'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 6]
    rotation: 0
    state: enabled
- name: thresh
  id: variable
  parameters:
    comment: ''
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1336, 12.0]
    rotation: 0
    state: enabled
- name: analog_feedforward_agc_cc_0
  id: analog_feedforward_agc_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_samples: '1024'
    reference: '1.55'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 812.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '0.3'
    comment: ''
    freq: baseband_LO
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: complex
    waveform: analog.GR_SIN_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 320.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '0.5'
    comment: ''
    freq: '-18_000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: rtl_samp_rate/10
    showports: 'False'
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 1032.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1840, 408.0]
    rotation: 0
    state: true
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: C:\Users\natha\OneDrive - Colorado School of Mines\Senior Design\GNU_radio\test_io\out_File
    type: byte
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2104, 568.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 184.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_xx_0_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 816.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: MSB
    endianness: gr.GR_MSB_FIRST
    k: '8'
    l: '1'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 396.0]
    rotation: 0
    state: true
- name: blocks_repack_bits_bb_0_0_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: MSB
    endianness: gr.GR_MSB_FIRST
    k: '8'
    l: '1'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1488, 524.0]
    rotation: 0
    state: true
- name: blocks_repack_bits_bb_1_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: MSB
    endianness: gr.GR_MSB_FIRST
    k: '1'
    l: '8'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 732.0]
    rotation: 0
    state: true
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 224.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: 20*samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408, 116.0]
    rotation: 0
    state: disabled
- name: blocks_uchar_to_float_0_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1320, 864.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0_0_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1744, 856.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0_0_0_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1672, 416.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0_0_0_0_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1696, 536.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: BPSK
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 592.0]
    rotation: 0
    state: enabled
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: BPSK
    differential: 'True'
    excess_bw: '0.35'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 104.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_xx_ts_0
  id: digital_correlate_access_code_xx_ts
  parameters:
    access_code: access_key
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: packet_len
    threshold: thresh
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 724.0]
    rotation: 0
    state: true
- name: digital_costas_loop_cc_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: '2'
    use_snr: 'False'
    w: '0.0628'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 776.0]
    rotation: 0
    state: enabled
- name: digital_crc32_bb_0
  id: digital_crc32_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: ''
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packed: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 212.0]
    rotation: 0
    state: true
- name: digital_crc32_bb_0_0
  id: digital_crc32_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'True'
    comment: ''
    lengthtagname: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packed: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1848, 724.0]
    rotation: 0
    state: true
- name: digital_diff_decoder_bb_0
  id: digital_diff_decoder_bb
  parameters:
    affinity: ''
    alias: ''
    coding: digital.DIFF_DIFFERENTIAL
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    modulus: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 652.0]
    rotation: 0
    state: enabled
- name: digital_fll_band_edge_cc_0
  id: digital_fll_band_edge_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: '44'
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: '0.35'
    samps_per_sym: '15'
    type: cc
    w: '0.0628'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 840.0]
    rotation: 0
    state: true
- name: digital_map_bb_0
  id: digital_map_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    map: '[0,1]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 736.0]
    rotation: 0
    state: true
- name: digital_pfb_clock_sync_xxx_0
  id: digital_pfb_clock_sync_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: nfilts
    init_phase: nfilts/2
    loop_bw: '.062'
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    osps: '1'
    sps: sps
    taps: rrc_taps
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 568.0]
    rotation: 0
    state: enabled
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 92.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    FileName: '"C:/Users/natha/OneDrive - Colorado School of Mines/Senior Design/GNU_radio/test_io/test2.png"'
    Pkt_len: packet_len
    _source_code: "\"\"\"\nEmbedded Python Block: File Source to Tagged Stream\n\"\
      \"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport time\nimport pmt\n\
      import os.path\nimport sys\nimport base64\nimport math\n\n\"\"\"\nState definitions\n\
      \    0   idle\n    1   send preamble\n    2   send file data\n    3   send file\
      \ name\n    4   send post filler\n\"\"\"\n\nclass blk(gr.sync_block):\n    def\
      \ __init__(self, FileName='None', Pkt_len=52, initial_packet_fill=1):\n    \
      \    gr.sync_block.__init__(\n            self,\n            name='EPB: File\
      \ Source to Tagged Stream',\n            in_sig=None,\n            out_sig=[np.uint8])\n\
      \        self.FileName = FileName\n        self.Pkt_len = Pkt_len\n        self.initial_packet_fill\
      \ = initial_packet_fill\n        self.state = 0      # idle state\n        self.pre_count\
      \ = 0\n        self.indx = 0\n        self._debug = 0     # debug\n        self.data\
      \ = \"\"\n\n        if (os.path.exists(self.FileName)):\n            # open\
      \ input file\n            self.f_in = open (self.FileName, 'rb')\n         \
      \   self._eof = False\n            if (self._debug):\n                print\
      \ (\"File name:\", self.FileName)\n            self.state = 1\n        else:\n\
      \            print(self.FileName, 'does not exist')\n            self._eof =\
      \ True\n            self.state = 0\n\n        self.char_list = [37,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,93]\n        self.c_len = len (self.char_list)\n        # print (self.c_len)\n\
      \        self.filler = [37,85,85,85, 35,69,79,70, 85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,93]\n        self.f_len\
      \ = len (self.filler)\n\n    def work(self, input_items, output_items):\n\n\
      \        # Attempt at fixing buffer overflow\n        if(len(output_items[0])<(int(math.ceil(self.Pkt_len*8/6)))):\n\
      \            if (self._debug):\n                print(\"GNU Radio Buffer Overflow\"\
      )\n                print(\"Try Decreasing Input File Size or Increasing Minoutput\
      \ Buffer\")\n            return 0\n\n        if (self.state == 0):\n       \
      \     if (self._debug):\n                print(\"State 0\")\n            # idle\n\
      \            return (0)\n\n        elif (self.state == 1):\n            # send\
      \ preamble\n            if (self._debug):\n                print (\"State =\
      \ 1\", self.pre_count)\n            key1 = pmt.intern(\"packet_len\")\n    \
      \        val1 = pmt.from_long(self.c_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.c_len\n        \
      \    \n            i = 0\n            j = 0\n            while(j<self.initial_packet_fill*self.c_len):\n\
      \                i = 0\n                while (i < self.c_len):\n          \
      \          output_items[0][j] = self.char_list[i]\n                    i +=\
      \ 1\n                    j += 1\n                \n                self.pre_count\
      \ += 1\n\n\n            if (self.pre_count > 64):\n                self.pre_count\
      \ = 0\n                self.state = 2      # send msg\n            return (self.c_len)\n\
      \n        elif (self.state == 2):\n            if (self._debug):\n         \
      \       print(\"State 2\")\n            while (not (self._eof)):\n         \
      \       buff = self.f_in.read(self.Pkt_len)\n                b_len = len(buff)\n\
      \                # if (self._debug):\n                #     print ('buff length\
      \ =', b_len, 'buff:', buff)\n                if b_len == 0:\n              \
      \      print ('End of file')\n                    self._eof = True\n       \
      \             self.f_in.close()\n                    self.state = 3      # send\
      \ file name\n                    self.pre_count = 0\n                    break\n\
      \                # convert to Base64\n                encoded = base64.b64encode\
      \ (buff)\n                e_len = len(encoded)\n                # if (self._debug):\n\
      \                #     print ('b64 length =', e_len)\n                #    \
      \ print('encoded:', encoded)\n                key0 = pmt.intern(\"packet_len\"\
      )\n                val0 = pmt.from_long(e_len)\n                self.add_item_tag(0,\
      \ # Write to output port 0\n                    self.indx,   # Index of the\
      \ tag\n                    key0,   # Key of the tag\n                    val0\
      \    # Value of the tag\n                    )\n                self.indx +=\
      \ e_len\n\n                if (self._debug):\n                    # print (\"\
      Length of input:\",len(input_items[0]))                    \n              \
      \      print (\"Length of output:\",len(output_items[0]))\n\n\n            \
      \    i = 0\n                while (i < len(encoded) and len(output_items[0])>=len(encoded)):\n\
      \                    # if (i == 63):\n                    #     print(\"i\"\
      ,encoded[i])\n                    output_items[0][i] = encoded[i]\n        \
      \            # print(\"i\",i)\n                    i += 1\n\n              \
      \  if(len(output_items[0])<len(encoded)):\n                    print(\"GNU Radio\
      \ Buffer Overflow\")\n                    print(\"Try Decreasing Input File\
      \ Size or Increasing Minoutput Buffer\")\n                    return 0\n   \
      \             return (e_len)\n\n        elif (self.state == 3):\n          \
      \  if (self._debug):\n                print(\"State 3\")\n            # send\
      \ file name\n            fn_len = len (self.FileName)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(fn_len+8)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += (fn_len+8)\n        \
      \    i = 0\n            while (i < 8):\n                output_items[0][i] =\
      \ self.filler[i]\n                i += 1\n            j = 0\n            while\
      \ (i < (fn_len+8)):\n                output_items[0][i] = ord(self.FileName[j])\n\
      \                i += 1\n                j += 1\n            self.state = 4\n\
      \            return (fn_len+8)\n\n        elif (self.state == 4):\n        \
      \    # send post filler\n            if (self._debug):\n                print\
      \ (\"State = 4 , precount =\", self.pre_count)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(self.f_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.f_len\n        \
      \    \n            i = 0\n            while (i < self.f_len):\n            \
      \    output_items[0][i] = self.filler[i]\n                i += 1\n         \
      \   self.pre_count += 1\n            if (self.pre_count > 16):\n           \
      \     self.pre_count = 0\n                self.state = 0      # idle\n     \
      \       return (self.f_len)\n\n        return (0)\n\n"
    affinity: ''
    alias: ''
    comment: 'Filename is specified on the command line, e.g.:

      python3 pkt_xmt.py --InFile="../gr-logo.png"'
    initial_packet_fill: '30'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52''), (''initial_packet_fill'', ''1'')], [], [(''0'', ''byte'',
      1)], '''', [''FileName'', ''Pkt_len'', ''initial_packet_fill''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 108.0]
    rotation: 0
    state: disabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    FileName: '"C:/Users/natha/OneDrive - Colorado School of Mines/Senior Design/GNU_radio/test_io/HelloWorld.txt"'
    Pkt_len: packet_len
    _source_code: "\"\"\"\nEmbedded Python Block: File Source to Tagged Stream\n\"\
      \"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport time\nimport pmt\n\
      import os.path\nimport sys\nimport base64\nimport math\n\n\"\"\"\nState definitions\n\
      \    0   idle\n    1   send preamble\n    2   send file data\n    3   send file\
      \ name\n    4   send post filler\n\"\"\"\n\nclass blk(gr.sync_block):\n    def\
      \ __init__(self, FileName='None', Pkt_len=52, initial_packet_fill=1):\n    \
      \    gr.sync_block.__init__(\n            self,\n            name='EPB: File\
      \ Source to Tagged Stream',\n            in_sig=None,\n            out_sig=[np.uint8])\n\
      \        self.FileName = FileName\n        self.Pkt_len = Pkt_len\n        self.initial_packet_fill\
      \ = initial_packet_fill\n        self.state = 0      # idle state\n        self.pre_count\
      \ = 0\n        self.indx = 0\n        self._debug = 0     # debug\n        self.data\
      \ = \"\"\n\n        if (os.path.exists(self.FileName)):\n            # open\
      \ input file\n            self.f_in = open (self.FileName, 'rb')\n         \
      \   self._eof = False\n            if (self._debug):\n                print\
      \ (\"File name:\", self.FileName)\n            self.state = 1\n        else:\n\
      \            print(self.FileName, 'does not exist')\n            self._eof =\
      \ True\n            self.state = 0\n\n        self.char_list = [37,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,93]\n        self.c_len = len (self.char_list)\n        # print (self.c_len)\n\
      \        self.filler = [37,85,85,85, 35,69,79,70, 85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,93]\n        self.f_len\
      \ = len (self.filler)\n\n    def work(self, input_items, output_items):\n\n\
      \        # Attempt at fixing buffer overflow\n        if(len(output_items[0])<(int(math.ceil(self.Pkt_len*8/6)))):\n\
      \            if (self._debug):\n                print(\"GNU Radio Buffer Overflow\"\
      )\n                print(\"Try Decreasing Input File Size or Increasing Minoutput\
      \ Buffer\")\n            return 0\n\n        if (self.state == 0):\n       \
      \     if (self._debug):\n                print(\"State 0\")\n            # idle\n\
      \            return (0)\n\n        elif (self.state == 1):\n            # send\
      \ preamble\n            if (self._debug):\n                print (\"State =\
      \ 1\", self.pre_count)\n            key1 = pmt.intern(\"packet_len\")\n    \
      \        val1 = pmt.from_long(self.c_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.c_len\n        \
      \    \n            i = 0\n            j = 0\n            while(j<self.initial_packet_fill*self.c_len):\n\
      \                i = 0\n                while (i < self.c_len):\n          \
      \          output_items[0][j] = self.char_list[i]\n                    i +=\
      \ 1\n                    j += 1\n                \n                self.pre_count\
      \ += 1\n\n\n            if (self.pre_count > 64):\n                self.pre_count\
      \ = 0\n                self.state = 2      # send msg\n            return (self.c_len)\n\
      \n        elif (self.state == 2):\n            if (self._debug):\n         \
      \       print(\"State 2\")\n            while (not (self._eof)):\n         \
      \       buff = self.f_in.read(self.Pkt_len)\n                b_len = len(buff)\n\
      \                # if (self._debug):\n                #     print ('buff length\
      \ =', b_len, 'buff:', buff)\n                if b_len == 0:\n              \
      \      print ('End of file')\n                    self._eof = True\n       \
      \             self.f_in.close()\n                    self.state = 3      # send\
      \ file name\n                    self.pre_count = 0\n                    break\n\
      \                # convert to Base64\n                encoded = base64.b64encode\
      \ (buff)\n                e_len = len(encoded)\n                # if (self._debug):\n\
      \                #     print ('b64 length =', e_len)\n                #    \
      \ print('encoded:', encoded)\n                key0 = pmt.intern(\"packet_len\"\
      )\n                val0 = pmt.from_long(e_len)\n                self.add_item_tag(0,\
      \ # Write to output port 0\n                    self.indx,   # Index of the\
      \ tag\n                    key0,   # Key of the tag\n                    val0\
      \    # Value of the tag\n                    )\n                self.indx +=\
      \ e_len\n\n                if (self._debug):\n                    # print (\"\
      Length of input:\",len(input_items[0]))                    \n              \
      \      print (\"Length of output:\",len(output_items[0]))\n\n\n            \
      \    i = 0\n                while (i < len(encoded) and len(output_items[0])>=len(encoded)):\n\
      \                    # if (i == 63):\n                    #     print(\"i\"\
      ,encoded[i])\n                    output_items[0][i] = encoded[i]\n        \
      \            # print(\"i\",i)\n                    i += 1\n\n              \
      \  if(len(output_items[0])<len(encoded)):\n                    print(\"GNU Radio\
      \ Buffer Overflow\")\n                    print(\"Try Decreasing Input File\
      \ Size or Increasing Minoutput Buffer\")\n                    return 0\n   \
      \             return (e_len)\n\n        elif (self.state == 3):\n          \
      \  if (self._debug):\n                print(\"State 3\")\n            # send\
      \ file name\n            fn_len = len (self.FileName)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(fn_len+8)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += (fn_len+8)\n        \
      \    i = 0\n            while (i < 8):\n                output_items[0][i] =\
      \ self.filler[i]\n                i += 1\n            j = 0\n            while\
      \ (i < (fn_len+8)):\n                output_items[0][i] = ord(self.FileName[j])\n\
      \                i += 1\n                j += 1\n            self.state = 4\n\
      \            return (fn_len+8)\n\n        elif (self.state == 4):\n        \
      \    # send post filler\n            if (self._debug):\n                print\
      \ (\"State = 4 , precount =\", self.pre_count)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(self.f_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.f_len\n        \
      \    \n            i = 0\n            while (i < self.f_len):\n            \
      \    output_items[0][i] = self.filler[i]\n                i += 1\n         \
      \   self.pre_count += 1\n            if (self.pre_count > 16):\n           \
      \     self.pre_count = 0\n                self.state = 0      # idle\n     \
      \       return (self.f_len)\n\n        return (0)\n\n"
    affinity: ''
    alias: ''
    comment: 'Filename is specified on the command line, e.g.:

      python3 pkt_xmt.py --InFile="../gr-logo.png"'
    initial_packet_fill: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52''), (''initial_packet_fill'', ''1'')], [], [(''0'', ''byte'',
      1)], '''', [''FileName'', ''Pkt_len'', ''initial_packet_fill''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 188.0]
    rotation: 0
    state: disabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    FileName: '"C:/Users/natha/OneDrive - Colorado School of Mines/Senior Design/GNU_radio/test_io/test.png"'
    Pkt_len: packet_len
    _source_code: "\"\"\"\nEmbedded Python Block: File Source to Tagged Stream\n\"\
      \"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport time\nimport pmt\n\
      import os.path\nimport sys\nimport base64\nimport math\n\n\"\"\"\nState definitions\n\
      \    0   idle\n    1   send preamble\n    2   send file data\n    3   send file\
      \ name\n    4   send post filler\n\"\"\"\n\nclass blk(gr.sync_block):\n    def\
      \ __init__(self, FileName='None', Pkt_len=52, initial_packet_fill=1):\n    \
      \    gr.sync_block.__init__(\n            self,\n            name='EPB: File\
      \ Source to Tagged Stream',\n            in_sig=None,\n            out_sig=[np.uint8])\n\
      \        self.FileName = FileName\n        self.Pkt_len = Pkt_len\n        self.initial_packet_fill\
      \ = initial_packet_fill\n        self.state = 0      # idle state\n        self.pre_count\
      \ = 0\n        self.indx = 0\n        self._debug = 0     # debug\n        self.data\
      \ = \"\"\n\n        if (os.path.exists(self.FileName)):\n            # open\
      \ input file\n            self.f_in = open (self.FileName, 'rb')\n         \
      \   self._eof = False\n            if (self._debug):\n                print\
      \ (\"File name:\", self.FileName)\n            self.state = 1\n        else:\n\
      \            print(self.FileName, 'does not exist')\n            self._eof =\
      \ True\n            self.state = 0\n\n        self.char_list = [37,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,93]\n        self.c_len = len (self.char_list)\n        # print (self.c_len)\n\
      \        self.filler = [37,85,85,85, 35,69,79,70, 85,85,85,85,85,85,85,85, 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,\
      \ 85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85, 85,85,85,93]\n        self.f_len\
      \ = len (self.filler)\n\n    def work(self, input_items, output_items):\n\n\
      \        # Attempt at fixing buffer overflow\n        if(len(output_items[0])<(int(math.ceil(self.Pkt_len*8/6)))):\n\
      \            if (self._debug):\n                print(\"GNU Radio Buffer Overflow\"\
      )\n                print(\"Try Decreasing Input File Size or Increasing Minoutput\
      \ Buffer\")\n            return 0\n\n        if (self.state == 0):\n       \
      \     if (self._debug):\n                print(\"State 0\")\n            # idle\n\
      \            return (0)\n\n        elif (self.state == 1):\n            # send\
      \ preamble\n            if (self._debug):\n                print (\"State =\
      \ 1\", self.pre_count)\n            key1 = pmt.intern(\"packet_len\")\n    \
      \        val1 = pmt.from_long(self.c_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.c_len\n        \
      \    \n            i = 0\n            j = 0\n            while(j<self.initial_packet_fill*self.c_len):\n\
      \                i = 0\n                while (i < self.c_len):\n          \
      \          output_items[0][j] = self.char_list[i]\n                    i +=\
      \ 1\n                    j += 1\n                \n                self.pre_count\
      \ += 1\n\n\n            if (self.pre_count > 64):\n                self.pre_count\
      \ = 0\n                self.state = 2      # send msg\n            return (self.c_len)\n\
      \n        elif (self.state == 2):\n            if (self._debug):\n         \
      \       print(\"State 2\")\n            while (not (self._eof)):\n         \
      \       buff = self.f_in.read(self.Pkt_len)\n                b_len = len(buff)\n\
      \                # if (self._debug):\n                #     print ('buff length\
      \ =', b_len, 'buff:', buff)\n                if b_len == 0:\n              \
      \      print ('End of file')\n                    self._eof = True\n       \
      \             self.f_in.close()\n                    self.state = 3      # send\
      \ file name\n                    self.pre_count = 0\n                    break\n\
      \                # convert to Base64\n                encoded = base64.b64encode\
      \ (buff)\n                e_len = len(encoded)\n                # if (self._debug):\n\
      \                #     print ('b64 length =', e_len)\n                #    \
      \ print('encoded:', encoded)\n                key0 = pmt.intern(\"packet_len\"\
      )\n                val0 = pmt.from_long(e_len)\n                self.add_item_tag(0,\
      \ # Write to output port 0\n                    self.indx,   # Index of the\
      \ tag\n                    key0,   # Key of the tag\n                    val0\
      \    # Value of the tag\n                    )\n                self.indx +=\
      \ e_len\n\n                if (self._debug):\n                    # print (\"\
      Length of input:\",len(input_items[0]))                    \n              \
      \      print (\"Length of output:\",len(output_items[0]))\n\n\n            \
      \    i = 0\n                while (i < len(encoded) and len(output_items[0])>=len(encoded)):\n\
      \                    # if (i == 63):\n                    #     print(\"i\"\
      ,encoded[i])\n                    output_items[0][i] = encoded[i]\n        \
      \            # print(\"i\",i)\n                    i += 1\n\n              \
      \  if(len(output_items[0])<len(encoded)):\n                    print(\"GNU Radio\
      \ Buffer Overflow\")\n                    print(\"Try Decreasing Input File\
      \ Size or Increasing Minoutput Buffer\")\n                    return 0\n   \
      \             return (e_len)\n\n        elif (self.state == 3):\n          \
      \  if (self._debug):\n                print(\"State 3\")\n            # send\
      \ file name\n            fn_len = len (self.FileName)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(fn_len+8)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += (fn_len+8)\n        \
      \    i = 0\n            while (i < 8):\n                output_items[0][i] =\
      \ self.filler[i]\n                i += 1\n            j = 0\n            while\
      \ (i < (fn_len+8)):\n                output_items[0][i] = ord(self.FileName[j])\n\
      \                i += 1\n                j += 1\n            self.state = 4\n\
      \            return (fn_len+8)\n\n        elif (self.state == 4):\n        \
      \    # send post filler\n            if (self._debug):\n                print\
      \ (\"State = 4 , precount =\", self.pre_count)\n            key1 = pmt.intern(\"\
      packet_len\")\n            val1 = pmt.from_long(self.f_len)\n            self.add_item_tag(0,\
      \ # Write to output port 0\n                self.indx,   # Index of the tag\n\
      \                key1,   # Key of the tag\n                val1    # Value of\
      \ the tag\n                )\n            self.indx += self.f_len\n        \
      \    \n            i = 0\n            while (i < self.f_len):\n            \
      \    output_items[0][i] = self.filler[i]\n                i += 1\n         \
      \   self.pre_count += 1\n            if (self.pre_count > 16):\n           \
      \     self.pre_count = 0\n                self.state = 0      # idle\n     \
      \       return (self.f_len)\n\n        return (0)\n\n"
    affinity: ''
    alias: ''
    comment: 'Filename is specified on the command line, e.g.:

      python3 pkt_xmt.py --InFile="../gr-logo.png"'
    initial_packet_fill: '100'
    maxoutbuf: '0'
    minoutbuf: 2**16
  states:
    _io_cache: '(''EPB: File Source to Tagged Stream'', ''blk'', [(''FileName'', "''None''"),
      (''Pkt_len'', ''52''), (''initial_packet_fill'', ''1'')], [], [(''0'', ''byte'',
      1)], '''', [''FileName'', ''Pkt_len'', ''initial_packet_fill''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 268.0]
    rotation: 0
    state: enabled
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: 5.5e3
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: 1.6E3
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 1000.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 924.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.05'
    axislabels: 'True'
    bw: 20*samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '16384'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Transmit"'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1392, 212.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '16384'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Orginal Modulated Signal"'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 292.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_1
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: rtl_samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '16384'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Receive"'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 372.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_1_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '16384'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Receive After Filter"'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 972.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Time Plot After LPF"'
    nconnections: '1'
    size: 2**10
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 1084.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: 1,2,1,2
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 1,2,1,2
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Correlate Output
    nconnections: '1'
    size: '256'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0.0'
    tr_level: '0.1'
    tr_mode: qtgui.TRIG_MODE_TAG
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '"packet_len"'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.1'
    ymin: '-0.1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1912, 828.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: 1,0,1,3
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'True'
    gui_hint: ''
    label1: Input File
    label10: ''
    label2: Output File
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Input Vs. Output Files
    nconnections: '2'
    size: '3_000'
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '0'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0.0'
    tr_level: '0.1'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '"packet_len"'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.1'
    ymin: '-0.1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1984, 420.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: 1,0,1,2
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: 1,0,1,2
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Correlate input
    nconnections: '1'
    size: '256'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0.0'
    tr_level: '0.2'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '"packet_len"'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.1'
    ymin: '-0.1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1488, 828.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Base Time Modulated Signal"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 36.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    fbw: '0'
    interp: '20'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: ''
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 164.0]
    rotation: 0
    state: enabled
- name: rational_resampler_xxx_1
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '10'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: ''
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 492.0]
    rotation: 0
    state: enabled
- name: rational_resampler_xxx_1_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '2'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: ''
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 436.0]
    rotation: 0
    state: disabled
- name: rtlsdr_source_0
  id: rtlsdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: ''
    bb_gain0: '20'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: internal
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '2'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: carrier_freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: '20'
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'True'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '2'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: rtl_samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 456.0]
    rotation: 0
    state: enabled
- name: soapy_hackrf_sink_0_0
  id: soapy_hackrf_sink
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '0'
    center_freq: carrier_freq
    comment: ''
    dev_args: ''
    samp_rate: 20*samp_rate
    type: fc32
    vga: '25'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1392, 124.0]
    rotation: 0
    state: enabled

connections:
- [analog_feedforward_agc_cc_0, '0', digital_pfb_clock_sync_xxx_0, '0']
- [analog_sig_source_x_0, '0', blocks_multiply_xx_0, '1']
- [analog_sig_source_x_0_0, '0', blocks_multiply_xx_0_0, '1']
- [blocks_delay_0, '0', qtgui_time_sink_x_0_1, '0']
- [blocks_multiply_xx_0, '0', qtgui_freq_sink_x_0_0, '0']
- [blocks_multiply_xx_0, '0', rational_resampler_xxx_0, '0']
- [blocks_multiply_xx_0_0, '0', digital_fll_band_edge_cc_0, '0']
- [blocks_repack_bits_bb_0_0, '0', blocks_uchar_to_float_0_0_0_0, '0']
- [blocks_repack_bits_bb_0_0_0, '0', blocks_uchar_to_float_0_0_0_0_0, '0']
- [blocks_repack_bits_bb_1_0, '0', digital_crc32_bb_0_0, '0']
- [blocks_tagged_stream_mux_0, '0', digital_constellation_modulator_0, '0']
- [blocks_throttle2_0, '0', rational_resampler_xxx_1_0, '0']
- [blocks_uchar_to_float_0_0, '0', qtgui_time_sink_x_0_2, '0']
- [blocks_uchar_to_float_0_0_0, '0', qtgui_time_sink_x_0_0, '0']
- [blocks_uchar_to_float_0_0_0_0, '0', blocks_delay_0, '0']
- [blocks_uchar_to_float_0_0_0_0_0, '0', qtgui_time_sink_x_0_1, '1']
- [digital_constellation_decoder_cb_0, '0', digital_diff_decoder_bb_0, '0']
- [digital_constellation_modulator_0, '0', blocks_multiply_xx_0, '0']
- [digital_constellation_modulator_0, '0', qtgui_time_sink_x_1, '0']
- [digital_correlate_access_code_xx_ts_0, '0', blocks_repack_bits_bb_1_0, '0']
- [digital_correlate_access_code_xx_ts_0, '0', blocks_uchar_to_float_0_0_0, '0']
- [digital_costas_loop_cc_0, '0', digital_constellation_decoder_cb_0, '0']
- [digital_costas_loop_cc_0, '0', qtgui_const_sink_x_0, '0']
- [digital_crc32_bb_0, '0', blocks_repack_bits_bb_0_0, '0']
- [digital_crc32_bb_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_crc32_bb_0, '0', digital_protocol_formatter_bb_0, '0']
- [digital_crc32_bb_0_0, '0', blocks_file_sink_0, '0']
- [digital_crc32_bb_0_0, '0', blocks_repack_bits_bb_0_0_0, '0']
- [digital_diff_decoder_bb_0, '0', digital_map_bb_0, '0']
- [digital_fll_band_edge_cc_0, '0', low_pass_filter_0, '0']
- [digital_map_bb_0, '0', blocks_uchar_to_float_0_0, '0']
- [digital_map_bb_0, '0', digital_correlate_access_code_xx_ts_0, '0']
- [digital_pfb_clock_sync_xxx_0, '0', digital_costas_loop_cc_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [epy_block_0, '0', digital_crc32_bb_0, '0']
- [epy_block_0_0, '0', digital_crc32_bb_0, '0']
- [epy_block_0_0_0, '0', digital_crc32_bb_0, '0']
- [low_pass_filter_0, '0', analog_feedforward_agc_cc_0, '0']
- [low_pass_filter_0, '0', qtgui_freq_sink_x_1_0, '0']
- [low_pass_filter_0, '0', qtgui_time_sink_x_0, '0']
- [rational_resampler_xxx_0, '0', blocks_throttle2_0, '0']
- [rational_resampler_xxx_0, '0', qtgui_freq_sink_x_0, '0']
- [rational_resampler_xxx_0, '0', soapy_hackrf_sink_0_0, '0']
- [rational_resampler_xxx_1, '0', blocks_multiply_xx_0_0, '0']
- [rational_resampler_xxx_1_0, '0', qtgui_freq_sink_x_1, '0']
- [rational_resampler_xxx_1_0, '0', rational_resampler_xxx_1, '0']
- [rtlsdr_source_0, '0', qtgui_freq_sink_x_1, '0']
- [rtlsdr_source_0, '0', rational_resampler_xxx_1, '0']

metadata:
  file_format: 1
  grc_version: 3.10.8.0
